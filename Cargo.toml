[package]
name = "leptos-website-maj"
version = "1.2.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
#Tokio
tokio = { version = "1", optional = true, features = ["full"] }

# Axum
axum = { version = "0.7", optional = true }
tower = { version = "0.5", optional = true, features = ["util"] }
tower-http = { version = "0.6", features = [
  "fs",
  "trace",
  "request-id",
  "compression-br",
  "compression-gzip",
], optional = true }

# Tracing & Logging
tracing = { version = "0.1", features = ["log"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
console_error_panic_hook = { version = "0.1", optional = true }

#Leptos
leptos = { version = "0.7", features = ["tracing"] }
leptos_meta = { version = "0.7" }
leptos_router = { version = "0.7" }
leptos-use = "0.15"
leptos_axum = { version = "0.7", optional = true }
wasm-bindgen = { version = "=0.2", optional = true }

# Http & Web-SYS
http = "1"
web-sys = { version = "0.3" }

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# Others
chrono = "0.4"
lettre = { version = "0.11", features = [
  "tokio1",
  "tokio1-native-tls",
], optional = true }
lazy-regex = { version = "3", optional = true }

[features]
hydrate = ["leptos/hydrate", "dep:console_error_panic_hook", "dep:wasm-bindgen"]
ssr = [
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "leptos-use/ssr",
  "dep:axum",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:leptos_axum",
  "dep:lettre",
  "dep:lazy-regex",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "leptos-website-maj"

# The site root folder is where cargo-leptos generate all output.
# WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:8080"

# The port to use for automatic reload monitoring
reload-port = 8081

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "PROD"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
